import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "@/app/globals.css";
import { Toaster } from "@/components/ui/toaster";
import { Notifications } from '@mantine/notifications';
import { MantineProvider, createTheme } from "@mantine/core";
import { ColorSchemeScript } from '@mantine/core';
import { ThemeProvider } from "@/components/theme-provider";
import '@mantine/core/styles.css';
import '@mantine/notifications/styles.css';
import { theme } from './theme';
import { Suspense } from 'react'
import Loading from './loading'

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <head>
        <ColorSchemeScript defaultColorScheme="auto" />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <MantineProvider 
            defaultColorScheme="auto"
            theme={theme}
          >
            <Suspense fallback={<Loading />}>
              {children}
              {/* <Toaster /> */}
              <Notifications position="top-right" />
            </Suspense>
          </MantineProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}